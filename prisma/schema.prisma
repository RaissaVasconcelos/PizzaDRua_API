// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "linux-musl-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Customer {
  id        String    @id @default(uuid())
  email     String    @unique
  name      String
  phone     String?
  password  String
  Address   Address[]
  Order     Order[]
  createdAt DateTime  @default(now())
  updatedAt DateTime?
}

model Address {
  id             String       @id @default(uuid())
  customer       Customer     @relation(fields: [customerId], references: [id])
  customerId     String
  neighborhood   Neighborhood @relation(fields: [neighborhoodId], references: [id])
  neighborhoodId String
  type           String
  street         String
  number         String
  zipCode        String
  phone          String
  createdAt      DateTime     @default(now())
  updatedAt      DateTime?
}

model Neighborhood {
  id        String    @id @default(uuid())
  name      String
  rate      String
  Address   Address[]
  createdAt DateTime  @default(now())
  updatedAt DateTime?
}

model Category {
  id        String    @id @default(uuid())
  name      String
  Product   Product[]
  createdAt DateTime  @default(now())
  updatedAt DateTime?
}

model Product {
  id          String     @id @default(uuid())
  name        String
  category    Category   @relation(fields: [categoryId], references: [id])
  categoryId  String
  description String
  image       String?
  price       String
  size        String
  type        TYPEPIZZA? @default(TRADITIONAL)
  createdAt   DateTime   @default(now())
  updatedAt   DateTime?
}

model Order {
  id         String    @id @default(uuid())
  customer   Customer  @relation(fields: [customerId], references: [id])
  customerId String
  status     STATUS    @default(WAITING)
  payment    String
  totalPrice String
  itensOrder Json
  createdAt  DateTime  @default(now())
  updatedAt  DateTime?
}

enum STATUS {
  WAITING
  ACCEPTED
  PREPARING
  DELIVERY
  FINISHED
}

enum TYPEPIZZA {
  TRADITIONAL
  SPECIAL
}
